// Configuration
    const API_BASE_URL = 'https://mb252cstbb.execute-api.us-east-1.amazonaws.com/prod';
    const REQUIRED_ACTIVITIES_COUNT = 3;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
    document.addEventListener('DOMContentLoaded', function() {
      const userData = JSON.parse(localStorage.getItem('userData') || '{}');
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if ((!userData.userId && !userData.studentId) || userData.role !== 'student') {
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
        window.location.href = "login.html";
        return;
      }
      
      // ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
      const username = userData.name || userData.userId;
      document.getElementById('user-icon').title = "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ, " + username;
      
      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏à‡∏≤‡∏Å API
      const studentId = userData.studentId || userData.userId;
      loadAllSkillData(studentId);
    });

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô navigateTo ‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô <script>
    function navigateTo(page) {
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ token ‡πÅ‡∏•‡∏∞ userData ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const token = localStorage.getItem('token');
      const userData = JSON.parse(localStorage.getItem('userData') || '{}');
      
      if (!token || !userData.userId) {
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ token ‡∏´‡∏£‡∏∑‡∏≠ userData ‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ login
        window.location.href = 'login.html';
        return;
      }

      // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ token ‡πÅ‡∏•‡∏∞ userData ‡πÉ‡∏´‡πâ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
      window.location.href = page;
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏à‡∏≤‡∏Å API
    async function fetchStudentInfo(studentId) {
    try {
      const apiUrl = `${API_BASE_URL}/students/${studentId}/info`;
      
      const response = await fetch(apiUrl, {
        headers: {
          'Authorization': `Bearer ${localStorage.getItem('token')}`
        }
      });
      
      if (!response.ok) {
        throw new Error(`API responded with status ${response.status}`);
      }
      
      const data = await response.json();
      
      // Update student info on webpage
      document.getElementById('student-name').textContent = data.name || '-';
      document.getElementById('student-year').textContent = data.yearLevel || '-';
      document.getElementById('student-faculty').textContent = '‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ';
      document.getElementById('student-department').textContent = data.department || '‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå';
      
      return data;
      
    } catch (error) {
      console.error('Error fetching student info:', error);
      // Use localStorage data if API fails
      const userData = JSON.parse(localStorage.getItem('userData') || '{}');
      
      // Update with localStorage values
      document.getElementById('student-name').textContent = userData.name || '-';
      document.getElementById('student-year').textContent = userData.yearLevel || '-';
      document.getElementById('student-faculty').textContent = '‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ';
      document.getElementById('student-department').textContent = userData.department || '‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå';
      
      return {
        name: userData.name || "‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤",
        yearLevel: userData.yearLevel || 2,
        department: userData.department || "‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå"
      };
    }
  }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å API (‡πÉ‡∏ä‡πâ endpoint ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏Å‡∏±‡∏ö current-skill.html)
    async function fetchAllSkillsFromAPI(yearLevel) {
      try {
        // ‚≠ê ‡πÉ‡∏ä‡πâ API /skills/all ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô current-skill.html)
        const response = await fetch(`${API_BASE_URL}/skills/all`, {
          headers: {
            'Authorization': `Bearer ${localStorage.getItem('token')}`
          }
        });
        
        if (!response.ok) {
          // ‡∏ñ‡πâ‡∏≤ endpoint ‡πÑ‡∏°‡πà‡∏°‡∏µ ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏î‡∏¥‡∏°‡∏Å‡πà‡∏≠‡∏ô
          const altResponse = await fetch(`${API_BASE_URL}/requiredSkills/${yearLevel}`, {
            headers: {
              'Authorization': `Bearer ${localStorage.getItem('token')}`
            }
          });
          
          if (altResponse.ok) {
            const allSkills = await altResponse.json();
            console.log('üîç All skills from requiredSkills endpoint:', allSkills);
            return allSkills;
          }
          
          throw new Error(`API error ${response.status}`);
        }
        
        const allSkills = await response.json();
        console.log('üîç All skills from skills/all endpoint:', allSkills);
        
        // ‡∏Å‡∏£‡∏≠‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤
        return allSkills.filter(skill => {
          if (skill.isRequired) {
            return skill.yearLevel == yearLevel; // ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≤‡∏° yearLevel
          } else {
            return true; // ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏∏‡∏Å‡∏≠‡∏±‡∏ô
          }
        });
        
      } catch (error) {
        console.error('Error fetching all skills:', error);
        return []; // ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö array ‡∏ß‡πà‡∏≤‡∏á‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
      }
    }



    // ‡∏î‡∏∂‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°
    async function fetchStudentActivities(studentId) {
      try {
        const response = await fetch(`${API_BASE_URL}/students/${studentId}/activities`, {
          headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }
        });
        
        if (!response.ok) throw new Error(`API error ${response.status}`);
        return await response.json();
      } catch (error) {
        console.error('Error fetching activities:', error);
        return [];
      }
    }

    // ‡∏î‡∏∂‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏£‡∏¥‡∏á‡πÜ (‡∏à‡∏≤‡∏Å CompletedSkills)
    async function fetchCompletedSkills(studentId) {
      try {
        const response = await fetch(`${API_BASE_URL}/students/${studentId}/skills`, {
          headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }
        });
        
        if (!response.ok) throw new Error(`API error ${response.status}`);
        return await response.json();
      } catch (error) {
        console.error('Error fetching completed skills:', error);
        return [];
      }
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    async function loadAllSkillData(studentId) {
      try {
        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤
        const studentInfo = await fetchStudentInfo(studentId);
        
        // ‡∏î‡∏∂‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ (‡∏à‡∏≤‡∏Å API ‡∏à‡∏£‡∏¥‡∏á)
        const allSkills = await fetchAllSkillsFromAPI(studentInfo.yearLevel);
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (allSkills.length === 0) {
          console.warn('No skills data available from API');
          document.getElementById('quiz-container').innerHTML = `
            <div class="loading">
              ‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÑ‡∏î‡πâ<br>
              <small style="color: #666; font-size: 0.9rem;">
                ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ API ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö
              </small>
            </div>
          `;
          return;
        }
        
        // ‡πÅ‡∏¢‡∏Å‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö
        const requiredSkills = allSkills.filter(skill => skill.isRequired === true);
        const optionalSkills = allSkills.filter(skill => skill.isRequired === false);
        
        // ‡∏î‡∏∂‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°
        const activities = await fetchStudentActivities(studentId);
        
        // ‡∏î‡∏∂‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏£‡∏¥‡∏á‡πÜ (‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß)
        const completedSkills = await fetchCompletedSkills(studentId);
        
        // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡πà‡∏≠‡∏ó‡∏±‡∏Å‡∏©‡∏∞
        const skillActivityCount = countActivitiesPerSkill(activities, allSkills);
        
        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà
        const { unlockedRequired, lockedRequired, unlockedOptional, lockedOptional } = 
          calculateAllSkillProgress(requiredSkills, optionalSkills, skillActivityCount);
        
        // Debug logging
        console.log('=== Skill Debug Info ===');
        console.log('Required Skills:', requiredSkills.map(s => ({ id: s.skillId, name: s.name })));
        console.log('Optional Skills:', optionalSkills.map(s => ({ id: s.skillId, name: s.name })));
        console.log('Skill Activity Count:', skillActivityCount);
        console.log('Unlocked Required:', unlockedRequired.map(s => ({ id: s.skillId, name: s.name })));
        console.log('Unlocked Optional:', unlockedOptional.map(s => ({ id: s.skillId, name: s.name })));
        console.log('========================');
        
        // ‡∏ô‡∏±‡∏ö‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏£‡∏¥‡∏á - ‡πÅ‡∏¢‡∏Å‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö
        const completedRequiredCount = countActualCompletedSkills(requiredSkills, completedSkills);
        const completedOptionalCount = countActualCompletedSkills(optionalSkills, completedSkills);
        
        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô  
        const pendingRequiredCount = requiredSkills.length - completedRequiredCount;
        
        console.log('=== Final Skill Count Summary ===');
        console.log('‚úÖ Required skills passed test:', completedRequiredCount);
        console.log('‚è≥ Required skills not passed test:', pendingRequiredCount); 
        console.log('üåü Optional skills passed test:', completedOptionalCount);
        console.log('üìã Total required skills available:', requiredSkills.length);
        console.log('üìã Total optional skills available:', optionalSkills.length);
        console.log('===============================');
        
        // ‚≠ê ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏Å‡∏©‡∏∞ - ‡∏ß‡∏á‡∏Å‡∏•‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        updateSkillStats(completedRequiredCount, pendingRequiredCount, completedOptionalCount);
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö (‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)
        createQuizItems(unlockedRequired, unlockedOptional, completedSkills);
        
      } catch (error) {
        console.error('Error loading skill data:', error);
      }
    }

    // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡πà‡∏≠‡∏ó‡∏±‡∏Å‡∏©‡∏∞ (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)
    function countActivitiesPerSkill(activities, allSkills) {
      const skillCount = {};
      
      // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ 0 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏ó‡∏±‡∏Å‡∏©‡∏∞
      allSkills.forEach(skill => {
        skillCount[skill.skillId] = 0;
      });
      
      // ‡∏ô‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏•‡∏∞‡∏°‡∏µ skillId
      activities.forEach(activity => {
        if (activity.surveyCompleted && activity.skillId) {
          if (skillCount.hasOwnProperty(activity.skillId)) {
            skillCount[activity.skillId]++;
          }
        }
      });
      
      return skillCount;
    }

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    function calculateAllSkillProgress(requiredSkills, optionalSkills, skillActivityCount) {
      const unlockedRequired = [];
      const lockedRequired = [];
      const unlockedOptional = [];
      const lockedOptional = [];
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö
      requiredSkills.forEach(skill => {
        const activityCount = skillActivityCount[skill.skillId] || 0;
        const requiredCount = skill.requiredActivities || REQUIRED_ACTIVITIES_COUNT;
        
        if (activityCount >= requiredCount) {
          unlockedRequired.push(skill);
        } else {
          lockedRequired.push(skill);
        }
      });
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö
      optionalSkills.forEach(skill => {
        const activityCount = skillActivityCount[skill.skillId] || 0;
        const requiredCount = skill.requiredActivities || REQUIRED_ACTIVITIES_COUNT;
        
        if (activityCount >= requiredCount) {
          unlockedOptional.push(skill);
        } else {
          lockedOptional.push(skill);
        }
      });
      
      return { unlockedRequired, lockedRequired, unlockedOptional, lockedOptional };
    }

    // ‡∏ô‡∏±‡∏ö‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏£‡∏¥‡∏á (‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß) - ‡πÅ‡∏¢‡∏Å‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö
    function countActualCompletedSkills(targetSkills, completedSkills) {
      if (!targetSkills || !completedSkills) return 0;
      
      const targetSkillIds = targetSkills.map(skill => skill.skillId);
      const completedSkillIds = completedSkills.map(skill => skill.skillId);
      
      // ‡∏ô‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô targetSkills ‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏£‡∏¥‡∏á
      const matchedSkills = targetSkillIds.filter(skillId => completedSkillIds.includes(skillId));
      
      console.log(`üîç Counting skills for ${targetSkills[0]?.isRequired ? 'REQUIRED' : 'OPTIONAL'}:`);
      console.log('  Target skill IDs:', targetSkillIds);
      console.log('  Completed skill IDs:', completedSkillIds);  
      console.log('  Matched skills:', matchedSkills);
      console.log('  Count result:', matchedSkills.length);
      
      return matchedSkills.length;
    }

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÉ‡∏ô‡∏ß‡∏á‡∏Å‡∏•‡∏°‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
    function updateSkillStats(completedRequired, pendingRequired, completedOptional) {
      const totalRequiredSkills = completedRequired + pendingRequired;
      
      // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏ô‡∏ß‡∏á‡∏Å‡∏•‡∏° (‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)
      document.getElementById('progress-text').textContent = `${completedRequired}/${totalRequiredSkills}`;
      
      // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤ (‡∏à‡∏≤‡∏Å‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)
      const progressPercent = totalRequiredSkills > 0 ? (completedRequired / totalRequiredSkills) * 100 : 0;
      const circumference = 2 * Math.PI * 45;
      const dashoffset = circumference - (circumference * progressPercent / 100);
      
      // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ß‡∏á‡∏Å‡∏•‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤
      document.getElementById('progress-indicator').setAttribute('stroke-dasharray', circumference);
      document.getElementById('progress-indicator').setAttribute('stroke-dashoffset', dashoffset);
      
      // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏±‡∏Å‡∏©‡∏∞
      document.getElementById('completed-required-skills').textContent = completedRequired;
      document.getElementById('pending-required-skills').textContent = pendingRequired;
      document.getElementById('completed-optional-skills').textContent = completedOptional;
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö (‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô)
    function createQuizItems(unlockedRequired, unlockedOptional, completedSkills) {
      const quizContainer = document.getElementById('quiz-container');
      let html = '';
      
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á Set ‡∏Ç‡∏≠‡∏á skillId ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß
      const completedSkillIds = new Set(completedSkills.map(skill => skill.skillId));
      
      // ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      const allUnlockedSkills = [...unlockedRequired, ...unlockedOptional];
      
      // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß
      if (allUnlockedSkills.length > 0) {
        allUnlockedSkills.forEach(skill => {
          const isAlreadyCompleted = completedSkillIds.has(skill.skillId);
          const isOptional = skill.isRequired === false;
          
          if (isAlreadyCompleted) {
            html += `
              <div class="quiz-item">
                <p>‚úÖ ${skill.name}</p>
                <button class="gray-btn" disabled>‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß</button>
              </div>
            `;
          } else {
            // ‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏µ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏ó‡∏±‡∏Å‡∏©‡∏∞
            html += `
              <div class="quiz-item">
                <p>${isOptional ? '‚≠ê' : 'üìù'} ${skill.name}</p>
                <button class="green-bt" onclick="startQuiz('${skill.skillId}')">‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö</button>
              </div>
            `;
          }
        });
      }
      
      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å
      if (allUnlockedSkills.length === 0) {
        html = `
          <div class="loading">
            üîí ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å<br>
            <small style="color: #666; font-size: 0.9rem;">
              ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
            </small>
          </div>
        `;
      } else {
        html += `
          <div class="quiz-item" style="background-color: #f5f5f5; border: 1px dashed #ccc;">
            <p>üîí ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å</p>
            <button class="gray-btn" disabled>‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</button>
          </div>
        `;
      }
      
      quizContainer.innerHTML = html;
    }

    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    function startQuiz(skillId) {
      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠
      const skillNames = {
        'skill001': '‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢',
        'skill002': '‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°',
        'skill003': '‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏Å‡∏ï‡πå‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á',
        'skill004': '‡∏î‡πâ‡∏≤‡∏ô‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•',
        'skill005': '‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£', 
        'skill006': '‡∏î‡πâ‡∏≤‡∏ô‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏†‡∏≤‡∏ß‡∏∞‡∏ú‡∏π‡πâ‡∏ô‡∏≥',
        'skill007': '‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
        'skill008': '‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå',
        'skill009': '‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤',
        'skill010': '‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡πÄ‡∏ß‡∏•‡∏≤'
      };
      
      const skillName = skillNames[skillId] || '‡∏ó‡∏±‡∏Å‡∏©‡∏∞';
      
      // ‡πÅ‡∏™‡∏î‡∏á dialog ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
      const confirmStart = confirm(
        `üéØ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö "${skillName}" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?\n\n` +
        `üìã ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠: 10 ‡∏Ç‡πâ‡∏≠\n` +
        `‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤: 15 ‡∏ô‡∏≤‡∏ó‡∏µ\n` +
        `üìä ‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏ú‡πà‡∏≤‡∏ô: 70% (7 ‡∏Ç‡πâ‡∏≠‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ)\n` +
        `üèÜ ‡∏´‡∏≤‡∏Å‡∏ú‡πà‡∏≤‡∏ô: ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ô‡∏µ‡πâ\n\n` +
        `‚ö†Ô∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡∏ô‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ`
      );
      
      if (confirmStart) {
        // ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
        window.location.href = `quiz.html?skillId=${skillId}`;
      }
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ü‡∏≠‡∏£‡πå‡πÅ‡∏°‡∏ï‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    function formatDate(dateString) {
      if (!dateString) return '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
      
      const options = { year: 'numeric', month: 'long', day: 'numeric' };
      return new Date(dateString).toLocaleDateString('th-TH', options);
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏≠‡∏≤‡∏ó‡πå
    function logout() {
      const confirmLogout = confirm('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?');
      if (confirmLogout) {
        localStorage.removeItem('userData');
        localStorage.removeItem('token');
        window.location.href = "login.html";
      }
    }