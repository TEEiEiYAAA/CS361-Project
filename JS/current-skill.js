    // Configuration
    const API_BASE_URL = 'https://mb252cstbb.execute-api.us-east-1.amazonaws.com/prod';
    const REQUIRED_ACTIVITIES_COUNT = 3;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
    document.addEventListener('DOMContentLoaded', function() {
      const userData = JSON.parse(localStorage.getItem('userData') || '{}');
      
      if ((!userData.userId && !userData.studentId) || userData.role !== 'student') {
        window.location.href = "login.html";
        return;
      }
      
      const studentId = userData.studentId || userData.userId;
      loadAllSkillData(studentId);
    });

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤
    async function fetchStudentInfo(studentId) {
      try {
        const response = await fetch(`${API_BASE_URL}/students/${studentId}/info`, {
          headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }
        });
        
        if (!response.ok) throw new Error(`API error ${response.status}`);
        return await response.json();
      } catch (error) {
        console.error('Error fetching student info:', error);
        const userData = JSON.parse(localStorage.getItem('userData') || '{}');
        return { 
          name: userData.name || "‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤",
          yearLevel: userData.yearLevel || 2
        };
      }
    }

    // ‡∏î‡∏∂‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ
    async function fetchRequiredSkills(yearLevel) {
      try {
        const response = await fetch(`${API_BASE_URL}/requiredSkills/${yearLevel}`, {
          headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }
        });
        
        if (!response.ok) throw new Error(`API error ${response.status}`);
        return await response.json();
      } catch (error) {
        console.error('Error fetching required skills:', error);
        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ï‡∏≤‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå Skills.txt
        return [
          { 
            skillId: "skill005", 
            name: "‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£", 
            description: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°",
            category: "soft skill",
            subcategory: "Communication",
            yearLevel: 1, 
            isRequired: true,
            requiredActivities: 3,
            passingScore: 70
          },
          { 
            skillId: "skill006", 
            name: "‡∏î‡πâ‡∏≤‡∏ô‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏†‡∏≤‡∏ß‡∏∞‡∏ú‡∏π‡πâ‡∏ô‡∏≥", 
            description: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°",
            category: "soft skill", 
            subcategory: "Leadership",
            yearLevel: 2, 
            isRequired: true,
            requiredActivities: 3,
            passingScore: 70
          },
          { 
            skillId: "skill009", 
            name: "‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤", 
            description: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°",
            category: "soft skill",
            subcategory: "Problem Solving", 
            yearLevel: 1, 
            isRequired: true,
            requiredActivities: 3,
            passingScore: 70
          },
          { 
            skillId: "skill002", 
            name: "‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°", 
            description: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°",
            category: "hard skill",
            subcategory: "Programming", 
            yearLevel: 2, 
            isRequired: true,
            requiredActivities: 3,
            passingScore: 70
          }
        ].filter(skill => skill.yearLevel <= yearLevel && skill.isRequired);
      }
    }

    // ‡∏î‡∏∂‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°
    async function fetchStudentActivities(studentId) {
      try {
        const response = await fetch(`${API_BASE_URL}/students/${studentId}/activities`, {
          headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }
        });
        
        if (!response.ok) throw new Error(`API error ${response.status}`);
        return await response.json();
      } catch (error) {
        console.error('Error fetching activities:', error);
        return [];
      }
    }

    // ‡∏î‡∏∂‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö (isRequired = false)
    async function fetchOptionalSkills(yearLevel) {
      try {
        // ‚≠ê ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ requiredSkills endpoint ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£ scan Skills table ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        const response = await fetch(`${API_BASE_URL}/skills/all`, {
          headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }
        });
        
        if (!response.ok) {
          // ‡∏ñ‡πâ‡∏≤ endpoint ‡πÑ‡∏°‡πà‡∏°‡∏µ ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏î‡∏¥‡∏°‡∏Å‡πà‡∏≠‡∏ô
          const altResponse = await fetch(`${API_BASE_URL}/requiredSkills/${yearLevel}`, {
            headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }
          });
          
          if (altResponse.ok) {
            const allSkills = await altResponse.json();
            console.log('üîç All skills from requiredSkills endpoint:', allSkills);
            
            // ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö
            const optionalSkills = allSkills.filter(skill => skill.isRequired === false);
            console.log('üîç Optional skills filtered:', optionalSkills);
            return optionalSkills;
          }
          
          throw new Error(`API error ${response.status}`);
        }
        
        const allSkills = await response.json();
        console.log('üîç All skills from skills/all endpoint:', allSkills);
        
        // ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ
        const optionalSkills = allSkills.filter(skill => 
          skill.isRequired === false 
        );
        
        console.log('üîç Optional skills filtered:', optionalSkills);
        return optionalSkills;
        
      } catch (error) {
        console.error('Error fetching optional skills:', error);
        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏à‡∏≤‡∏Å Skills.txt - ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á
        const sampleOptionalSkills = [
          { 
            skillId: "skill001", 
            name: "‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢", 
            description: "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏≠‡∏á‡∏Ñ‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏ó‡∏≤‡∏á‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢",
            category: "hard skill",
            subcategory: "Cybersecurity",
            yearLevel: 3, 
            isRequired: false,  // ‚≠ê ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á Skills skill001 ‡πÄ‡∏õ‡πá‡∏ô isRequired: false
            requiredActivities: 3,
            passingScore: 70
          },
          { 
            skillId: "skill003", 
            name: "‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏Å‡∏ï‡πå‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á", 
            description: "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏Å‡∏ï‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏±‡∏ô‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå",
            category: "hard skill",
            subcategory: "Web & App Development",
            yearLevel: 3, 
            isRequired: false,
            requiredActivities: 2,
            passingScore: 70
          },
          { 
            skillId: "skill004", 
            name: "‡∏î‡πâ‡∏≤‡∏ô‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•", 
            description: "‡∏ï‡∏£‡∏∞‡∏´‡∏ô‡∏±‡∏Å‡∏£‡∏π‡πâ‡πÅ‡∏ô‡∏ß‡∏Ñ‡∏¥‡∏î‡πÅ‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£",
            category: "soft skill", 
            subcategory: "Entrepreneurship",
            yearLevel: 1, 
            isRequired: false,
            requiredActivities: 1,
            passingScore: 70
          },
          { 
            skillId: "skill007", 
            name: "‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", 
            description: "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÅ‡∏•‡∏∞‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£",
            category: "hard skill",
            subcategory: "Database", 
            yearLevel: 3, 
            isRequired: false,
            requiredActivities: 2,
            passingScore: 75
          },
          { 
            skillId: "skill008", 
            name: "‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå", 
            description: "‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå ‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢",
            category: "hard skill",
            subcategory: "Networking", 
            yearLevel: 3, 
            isRequired: false,
            requiredActivities: 2,
            passingScore: 75
          },
          { 
            skillId: "skill010", 
            name: "‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡πÄ‡∏ß‡∏•‡∏≤", 
            description: "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡∏ï‡∏≤‡∏°‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î",
            category: "soft skill",
            subcategory: "Time Management", 
            yearLevel: 1, 
            isRequired: false,
            requiredActivities: 2,
            passingScore: 70
          }
        ].filter(skill => skill.yearLevel <= yearLevel);
        
        console.log('üîç Using sample optional skills:', sampleOptionalSkills);
        return sampleOptionalSkills;
      }
    }
    async function fetchStudentSkills(studentId) {
      try {
        const response = await fetch(`${API_BASE_URL}/students/${studentId}/skills`, {
          headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }
        });
        
        if (!response.ok) throw new Error(`API error ${response.status}`);
        return await response.json();
      } catch (error) {
        console.error('Error fetching student skills:', error);
        return [];
      }
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    async function loadAllSkillData(studentId) {
      try {
        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤
        const studentInfo = await fetchStudentInfo(studentId);
        
        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        document.getElementById('student-name').textContent = studentInfo.name || "‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤";
        document.getElementById('student-info').textContent = `‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ‡∏ó‡∏µ‡πà ${studentInfo.yearLevel}`;
        
        // ‡∏î‡∏∂‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ
        const requiredSkills = await fetchRequiredSkills(studentInfo.yearLevel);
        
        // ‡∏î‡∏∂‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°
        const activities = await fetchStudentActivities(studentId);
        
        // ‡∏î‡∏∂‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö (‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß)
        const completedSkillsFromAPI = await fetchStudentSkills(studentId);
        
        // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡πà‡∏≠‡∏ó‡∏±‡∏Å‡∏©‡∏∞ (‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à)
        const skillActivityCount = countActivitiesPerSkill(activities, requiredSkills);
        
        // ‡∏ô‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô
        const skillPendingSurveyCount = countPendingSurveyActivities(activities, requiredSkills);
        
        console.log('Required Skills:', requiredSkills);
        console.log('Activities:', activities);
        console.log('Skill Activity Count:', skillActivityCount);
        console.log('Skill Pending Survey Count:', skillPendingSurveyCount);
        console.log('Completed Skills from API:', completedSkillsFromAPI);
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å CompletedSkills table
        displaySkillsByStatus(requiredSkills, skillActivityCount, skillPendingSurveyCount, completedSkillsFromAPI);
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏≤‡∏Å CompletedSkills table)
        displayAllSkills(completedSkillsFromAPI);
        
        // ‚≠ê ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)
        const optionalSkills = await fetchOptionalSkills(studentInfo.yearLevel);
        const optionalSkillActivityCount = countActivitiesPerSkill(activities, optionalSkills);
        const optionalSkillPendingSurveyCount = countPendingSurveyActivities(activities, optionalSkills);
        
        console.log('Optional Skills:', optionalSkills);
        console.log('Optional Skill Activity Count:', optionalSkillActivityCount);
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° >= 1)
        displayOptionalSkillsByStatus(optionalSkills, optionalSkillActivityCount, optionalSkillPendingSurveyCount, completedSkillsFromAPI);
        
      } catch (error) {
        console.error('Error loading skill data:', error);
        showError();
      }
    }

    // ‚≠ê ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡πà‡∏≠‡∏ó‡∏±‡∏Å‡∏©‡∏∞ - ‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏î‡πâ‡∏ß‡∏¢
    function countActivitiesPerSkill(activities, requiredSkills) {
      const skillCount = {};
      
      // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ 0 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö
      requiredSkills.forEach(skill => {
        skillCount[skill.skillId] = 0;
      });
      
      // ‡∏ô‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏°‡∏µ skillId ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
      activities.forEach(activity => {
        if (activity.isConfirmed && 
            activity.skillId && 
            activity.surveyCompleted === true) {  // ‚≠ê ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô
          
          if (skillCount.hasOwnProperty(activity.skillId)) {
            skillCount[activity.skillId]++;
          }
        }
      });
      
      console.log('üîç Activity counting details:');
      activities.forEach(activity => {
        console.log(`Activity ${activity.activityId}:`, {
          isConfirmed: activity.isConfirmed,
          surveyCompleted: activity.surveyCompleted,
          skillId: activity.skillId,
          counted: activity.isConfirmed && activity.skillId && activity.surveyCompleted === true
        });
      });
      
      return skillCount;
    }

    // ‚≠ê ‡∏ô‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô
    function countPendingSurveyActivities(activities, requiredSkills) {
      const skillCount = {};
      
      // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ 0 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö
      requiredSkills.forEach(skill => {
        skillCount[skill.skillId] = 0;
      });
      
      // ‡∏ô‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô
      activities.forEach(activity => {
        if (activity.isConfirmed && 
            activity.skillId && 
            activity.surveyCompleted === false) {  // ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô
          
          if (skillCount.hasOwnProperty(activity.skillId)) {
            skillCount[activity.skillId]++;
          }
        }
      });
      
      return skillCount;
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å CompletedSkills table
    function displaySkillsByStatus(requiredSkills, skillActivityCount, skillPendingSurveyCount, completedSkillsFromAPI) {
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á Set ‡∏Ç‡∏≠‡∏á skillId ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß
      const passedSkillIds = new Set(completedSkillsFromAPI.map(skill => skill.skillId));
      
      const completedSkills = [];
      const pendingSkills = [];
      
      requiredSkills.forEach(skill => {
        const activityCount = skillActivityCount[skill.skillId] || 0;
        const pendingSurveyCount = skillPendingSurveyCount[skill.skillId] || 0;
        const requiredCount = skill.requiredActivities || REQUIRED_ACTIVITIES_COUNT;
        const hasPassedTest = passedSkillIds.has(skill.skillId);
        
        // ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î "‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß" ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        if (hasPassedTest) {
          completedSkills.push({ 
            ...skill, 
            activityCount, 
            pendingSurveyCount,
            requiredCount, 
            hasPassedTest: true 
          });
        } else {
          pendingSkills.push({ 
            ...skill, 
            activityCount, 
            pendingSurveyCount,
            requiredCount, 
            hasPassedTest: false 
          });
        }
      });
      
      // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß
      displayCompletedSkills(completedSkills);
      
      // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
      displayPendingSkills(pendingSkills);
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ú‡πà‡∏≤‡∏ô)
    function displayCompletedSkills(skills) {
      const container = document.getElementById('completed-skills');
      
      if (skills.length === 0) {
        container.innerHTML = '<div class="empty-message">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö</div>';
        return;
      }
      
      let html = '';
      skills.forEach(skill => {
        html += `
          <div class="skill-item">
            <div class="skill-left">
              <input type="checkbox" class="skill-checkbox" checked disabled>
              <div class="skill-info">
                <div class="skill-name">${skill.name}</div>
                <div class="skill-description">${skill.description || ''}</div>
                <div class="skill-status">‚úÖ ‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß</div>
              </div>
            </div>
            <div class="activity-count completed">‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß</div>
          </div>
        `;
      });
      
      container.innerHTML = html;
    }

    // ‚≠ê ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö) ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    function displayOptionalSkillsByStatus(optionalSkills, skillActivityCount, skillPendingSurveyCount, completedSkillsFromAPI) {
      console.log('üîç === OPTIONAL SKILLS DEBUG ===');
      console.log('üîç Optional skills received:', optionalSkills);
      console.log('üîç Optional skill activity count:', skillActivityCount);
      console.log('üîç Optional skill pending survey count:', skillPendingSurveyCount);
      console.log('üîç Completed skills from API:', completedSkillsFromAPI);
      
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á Set ‡∏Ç‡∏≠‡∏á skillId ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß
      const passedSkillIds = new Set(completedSkillsFromAPI.map(skill => skill.skillId));
      console.log('üîç Passed skill IDs:', Array.from(passedSkillIds));
      
      const completedOptionalSkills = [];
      const pendingOptionalSkills = [];
      
      optionalSkills.forEach(skill => {
        const activityCount = skillActivityCount[skill.skillId] || 0;
        const pendingSurveyCount = skillPendingSurveyCount[skill.skillId] || 0;
        const requiredCount = skill.requiredActivities || REQUIRED_ACTIVITIES_COUNT;
        const hasPassedTest = passedSkillIds.has(skill.skillId);
        
        console.log(`üîç Processing skill ${skill.skillId} (${skill.name}):`);
        console.log(`   - Activity count: ${activityCount}`);
        console.log(`   - Pending survey count: ${pendingSurveyCount}`);
        console.log(`   - Required count: ${requiredCount}`);
        console.log(`   - Has passed test: ${hasPassedTest}`);
        console.log(`   - Will show: ${activityCount > 0 || hasPassedTest}`);
        
        // ‚≠ê ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° >= 1 ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á 0/3)
        if (activityCount > 0 || hasPassedTest) {
          if (hasPassedTest) {
            completedOptionalSkills.push({ 
              ...skill, 
              activityCount, 
              pendingSurveyCount,
              requiredCount, 
              hasPassedTest: true 
            });
            console.log(`   ‚û°Ô∏è Added to completed optional skills`);
          } else {
            pendingOptionalSkills.push({ 
              ...skill, 
              activityCount, 
              pendingSurveyCount,
              requiredCount, 
              hasPassedTest: false 
            });
            console.log(`   ‚û°Ô∏è Added to pending optional skills`);
          }
        } else {
          console.log(`   ‚ùå Skipped (no activities)`);
        }
      });
      
      console.log('üîç Final completed optional skills:', completedOptionalSkills);
      console.log('üîç Final pending optional skills:', pendingOptionalSkills);
      console.log('üîç === END OPTIONAL SKILLS DEBUG ===');
      
      // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß
      displayOptionalCompletedSkills(completedOptionalSkills);
      
      // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
      displayOptionalPendingSkills(pendingOptionalSkills);
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß
    function displayOptionalCompletedSkills(skills) {
      const container = document.getElementById('optional-completed-skills');
      
      if (skills.length === 0) {
        container.innerHTML = '<div class="empty-message">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö</div>';
        return;
      }
      
      let html = '';
      skills.forEach(skill => {
        html += `
          <div class="skill-item">
            <div class="skill-left">
              <input type="checkbox" class="skill-checkbox" checked disabled>
              <div class="skill-info">
                <div class="skill-name">${skill.name}</div>
                <div class="skill-description">${skill.description || ''}</div>
                <div class="skill-status">‚úÖ ‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß</div>
              </div>
            </div>
            <div class="activity-count completed">‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß</div>
          </div>
        `;
      });
      
      container.innerHTML = html;
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° >= 1)
    function displayOptionalPendingSkills(skills) {
      const container = document.getElementById('optional-pending-skills');
      
      if (skills.length === 0) {
        container.innerHTML = '<div class="empty-message">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</div>';
        return;
      }
      
      let html = '';
      skills.forEach(skill => {
        const isInProgress = skill.activityCount > 0;
        const needsSurvey = skill.pendingSurveyCount > 0;
        const canTakeTest = skill.activityCount >= (skill.requiredActivities || REQUIRED_ACTIVITIES_COUNT);
        
        let countClass = '';
        let statusText = '';
        
        if (canTakeTest) {
          // 3/3 = ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
          countClass = 'completed';
          statusText = 'üéØ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ';
        } else if (isInProgress) {
          // 1/3, 2/3 = ‡∏™‡∏µ‡∏™‡πâ‡∏°
          countClass = 'in-progress';
          statusText = 'üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£';
        } else {
          // 0/3 = ‡∏™‡∏µ‡πÄ‡∏ó‡∏≤ (‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô optional skills)
          countClass = '';
          if (needsSurvey) {
            statusText = `üìã ‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏£‡∏≠‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô ${skill.pendingSurveyCount} ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°`;
          } else {
            statusText = 'üìã ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô';
          }
        }
        
        html += `
          <div class="skill-item">
            <div class="skill-left">
              <input type="checkbox" class="skill-checkbox" disabled>
              <div class="skill-info">
                <div class="skill-name">${skill.name}</div>
                <div class="skill-description">${skill.description || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢'}</div>
                <div class="skill-status">${statusText}</div>
              </div>
            </div>
            <div class="activity-count ${countClass}">${skill.activityCount}/${skill.requiredActivities || REQUIRED_ACTIVITIES_COUNT}</div>
          </div>
        `;
      });
      
      container.innerHTML = html;
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    function displayPendingSkills(skills) {
      const container = document.getElementById('pending-skills');
      
      if (skills.length === 0) {
        container.innerHTML = '<div class="empty-message">‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß</div>';
        return;
      }
      
      let html = '';
      skills.forEach(skill => {
        const isInProgress = skill.activityCount > 0;
        const needsSurvey = skill.pendingSurveyCount > 0;
        const canTakeTest = skill.activityCount >= (skill.requiredActivities || REQUIRED_ACTIVITIES_COUNT);
        
        let countClass = '';
        let statusText = '';
        
        if (canTakeTest) {
          // 3/3 = ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
          countClass = 'completed';
          statusText = 'üéØ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ';
        } else if (isInProgress) {
          // 1/3, 2/3 = ‡∏™‡∏µ‡∏™‡πâ‡∏°
          countClass = 'in-progress';
          statusText = 'üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£';
        } else {
          // 0/3 = ‡∏™‡∏µ‡πÄ‡∏ó‡∏≤ (‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏£‡∏≠‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà)
          countClass = '';
          if (needsSurvey) {
            statusText = `üìã ‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏£‡∏≠‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô ${skill.pendingSurveyCount} ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°`;
          } else {
            statusText = 'üìã ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô';
          }
        }
        
        html += `
          <div class="skill-item">
            <div class="skill-left">
              <input type="checkbox" class="skill-checkbox" disabled>
              <div class="skill-info">
                <div class="skill-name">${skill.name}</div>
                <div class="skill-description">${skill.description || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢'}</div>
                <div class="skill-status">${statusText}</div>
              </div>
            </div>
            <div class="activity-count ${countClass}">${skill.activityCount}/${skill.requiredActivities || REQUIRED_ACTIVITIES_COUNT}</div>
          </div>
        `;
      });
      
      container.innerHTML = html;
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß)
    function displayAllSkills(completedSkillsFromAPI) {
      const container = document.getElementById('all-skills-list');
      
      if (!completedSkillsFromAPI || completedSkillsFromAPI.length === 0) {
        container.innerHTML = '<div class="empty-message">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö<br><small>‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∂‡∏á‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà</small></div>';
        return;
      }
      
      let html = '';
      
      completedSkillsFromAPI.forEach(skill => {
        const completedDate = skill.completedDate || new Date().toISOString().split('T')[0];
        const finalScore = skill.FinalScore || skill.finalScore || 0;
        
        html += `
          <div class="skill-card">
            <h4>
              ${skill.skillName || skill.name}
              <span class="skill-badge">‡∏ú‡πà‡∏≤‡∏ô ${finalScore} ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</span>
            </h4>
            <p>${skill.skillDescription || skill.description || '‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß ‡πÇ‡∏î‡∏¢‡πÑ‡∏î‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ï‡∏≤‡∏°‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î'}</p>
            <div class="skill-meta">
              <span>‡∏£‡∏∞‡∏î‡∏±‡∏ö: ${skill.skillCategory || '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô'}</span>
              <span>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö: ${formatDate(completedDate)}</span>
            </div>
          </div>
        `;
      });
      
      container.innerHTML = html;
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
    function showError() {
      document.getElementById('completed-skills').innerHTML = `
        <div class="error-message">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏Å‡∏©‡∏∞</div>
      `;
      document.getElementById('pending-skills').innerHTML = `
        <div class="error-message">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏Å‡∏©‡∏∞</div>
      `;
      document.getElementById('all-skills-list').innerHTML = `
        <div class="error-message">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏Å‡∏©‡∏∞</div>
      `;
      document.getElementById('optional-completed-skills').innerHTML = `
        <div class="error-message">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏Å‡∏©‡∏∞</div>
      `;
      document.getElementById('optional-pending-skills').innerHTML = `
        <div class="error-message">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏Å‡∏©‡∏∞</div>
      `;
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ü‡∏≠‡∏£‡πå‡πÅ‡∏°‡∏ï‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    function formatDate(dateString) {
      if (!dateString) return '25 ‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏° 2568';
      
      try {
        const options = { year: 'numeric', month: 'long', day: 'numeric' };
        return new Date(dateString).toLocaleDateString('th-TH', options);
      } catch (error) {
        return '25 ‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏° 2568';
      }
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏≠‡∏≤‡∏ó‡πå
    function logout() {
      const confirmLogout = confirm('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?');
      if (confirmLogout) {
        localStorage.removeItem('userData');
        localStorage.removeItem('token');
        window.location.href = "login.html";
      }
    }